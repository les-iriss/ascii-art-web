package main

import (
    "fmt"
    "net"
    "strings"
)

func handleConnection(conn net.Conn) {
    defer conn.Close()

    // Read the request
    buffer := make([]byte, 4096)
    n, err := conn.Read(buffer)
    if err != nil {
        fmt.Println("Error reading request:", err)
        return
    }

    // Convert the request bytes to a string
    request := string(buffer[:n])

    // Print the request
    fmt.Println("Received request:")
    fmt.Println(request)

    // Parse the request
    lines := strings.Split(request, "\n")
    if len(lines) > 0 {
        // Extract the request method and path
        parts := strings.Fields(lines[0])
        if len(parts) >= 2 {
            method := parts[0]
            path := parts[1]
            fmt.Println("Method:", method)
            fmt.Println("Path:", path)
        }
    }

    // Send the response
    response := "HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\n\r\nHello, World!\r\n"
    conn.Write([]byte(response))
}

func main() {
    // Start listening on port 8080
    listener, err := net.Listen("tcp", ":8080")
    if err != nil {
        fmt.Println("Error listening:", err)
        return
    }
    defer listener.Close()

    fmt.Println("Server started. Listening on port 8080...")

    // Accept incoming connections
    for {
        conn, err := listener.Accept()
        if err != nil {
            fmt.Println("Error accepting connection:", err)
            continue
        }
        go handleConnection(conn)
    }
}
